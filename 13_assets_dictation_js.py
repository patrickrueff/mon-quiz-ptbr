# 13_assets_dictation_js.py
# Quiz "dict√©e": l'utilisateur saisit le texte entendu, correction + feedback + r√©cap

def make_dictation_js(timer_seconds: int = 12, reveal_delay_ms: int = 1500) -> str:
    return (
        "function normalize(s){\n"
        "  if(!s) return '';\n"
        "  return s\n"
        "    .normalize('NFD')\n"
        "    .replace(/[\\u0300-\\u036f]/g,'')    // accents\n"
        "    .replace(/[^\\w\\s]/g,' ')           // ponctuation -> espace\n"
        "    .replace(/\\s+/g,' ')                // espaces multiples\n"
        "    .trim()\n"
        "    .toLowerCase();\n"
        "}\n"
        "function DictationApp(config){\n"
        "  const TIMER_LIMIT_S = " + str(timer_seconds) + ";\n"
        "  const REVEAL_DELAY_MS = " + str(reveal_delay_ms) + ";\n"
        "  const state={ pool:config.pool, idx:0, score:0, total:config.total, started:false, paused:false,\n"
        "                countdown:TIMER_LIMIT_S, countdownInterval:null, answered:false, history:[] };\n"
        "  const elBtnStart=document.getElementById('btn-start');\n"
        "  const elBtnCheck=document.getElementById('btn-check');\n"
        "  const elBtnNext=document.getElementById('btn-next');\n"
        "  const elBtnRestart=document.getElementById('btn-restart');\n"
        "  const elQ=document.getElementById('qnum');\n"
        "  const elScore=document.getElementById('score');\n"
        "  const elTimer=document.getElementById('timer');\n"
        "  const elInput=document.getElementById('answer');\n"
        "  const elResult=document.getElementById('result');\n"
        "  const elConfig=document.getElementById('config');\n"
        "  const elStage=document.getElementById('stage');\n"
        "\n"
        "  function setButtons(){\n"
        "    elBtnStart.style.display = state.started ? 'none' : 'inline-flex';\n"
        "    elBtnCheck.style.display = (state.started && !state.answered) ? 'inline-flex' : 'none';\n"
        "    elBtnNext.style.display  = (state.started && state.answered) ? 'inline-flex' : 'none';\n"
        "    elBtnRestart.style.display = state.started ? 'inline-flex' : 'none';\n"
        "  }\n"
        "  function startCountdown(){\n"
        "    clearInterval(state.countdownInterval);\n"
        "    state.countdown = TIMER_LIMIT_S;\n"
        "    elTimer.textContent = state.countdown.toString();\n"
        "    state.countdownInterval = setInterval(()=>{\n"
        "      if(state.paused) return;\n"
        "      state.countdown -= 1;\n"
        "      elTimer.textContent = Math.max(0,state.countdown).toString();\n"
        "      if(state.countdown<=0){ clearInterval(state.countdownInterval); onTimeout(); }\n"
        "    },1000);\n"
        "  }\n"
        "  function render(){\n"
        "    const cur=state.pool[state.idx];\n"
        "    state.answered=false; elInput.disabled=false; elInput.value=''; elInput.focus();\n"
        "    elResult.innerHTML=''; elQ.textContent=(state.idx+1)+' / '+state.total; elScore.textContent=state.score;\n"
        "    stopAudio(); play(cur.normal); startCountdown(); setButtons();\n"
        "  }\n"
        "  function showFeedback(cur, isCorrect, userText){\n"
        "    const fr = (cur.fr||''); const phon = (cur.phon||'');\n"
        "    const icon = isCorrect ? '‚úÖ' : '‚ùå';\n"
        "    const title = isCorrect ? 'Correct !' : 'Mauvaise r√©ponse.';\n"
        "    elResult.innerHTML = `<div class=\"feedback\">\n"
        "      <div class=\"fb-title\">${icon} ${title}</div>\n"
        "      <div class=\"fb-pt\"><strong>Attendu (PT) :</strong> ${cur.pt||''}</div>\n"
        "      <div class=\"fb-phon\"><strong>Phon√©tique :</strong> ${phon||'‚Äî'}</div>\n"
        "      <div class=\"fb-fr\"><strong>Fran√ßais :</strong> ${fr||'‚Äî'}</div>\n"
        "      <div class=\"fb-user small\"><strong>Votre saisie :</strong> ${userText?userText:'(vide)'} </div>\n"
        "    </div>`;\n"
        "  }\n"
        "  function check(){\n"
        "    if(state.answered) return;\n"
        "    state.answered=true; clearInterval(state.countdownInterval);\n"
        "    const cur=state.pool[state.idx];\n"
        "    const user=elInput.value||''; elInput.disabled=true;\n"
        "    const ok = normalize(user)===normalize(cur.pt||'');\n"
        "    if(ok) state.score+=1; elScore.textContent=state.score;\n"
        "    showFeedback(cur, ok, user);\n"
        "    state.history.push({pt:cur.pt||'', phon:cur.phon||'', fr:cur.fr||'', user:user, correct:ok});\n"
        "    setButtons();\n"
        "    setTimeout(()=>{ /* auto-next visuelle mais on garde le bouton */ }, REVEAL_DELAY_MS);\n"
        "  }\n"
        "  function onTimeout(){\n"
        "    if(state.answered) return; state.answered=true; elInput.disabled=true;\n"
        "    const cur=state.pool[state.idx];\n"
        "    showFeedback(cur, false, elInput.value||'');\n"
        "    state.history.push({pt:cur.pt||'', phon:cur.phon||'', fr:cur.fr||'', user:elInput.value||'', correct:false});\n"
        "    setButtons();\n"
        "  }\n"
        "  function next(){\n"
        "    if(state.idx+1>=state.total){\n"
        "      // Summary\n"
        "      const rows = state.history.map((e,i)=>{\n"
        "        const st = e.correct?'‚úÖ':'‚ùå';\n"
        "        return `<tr class=\"row-${e.correct?'ok':'ko'}\"><td>${i+1}</td><td>${st}</td><td>${e.pt}</td><td>${e.phon||'‚Äî'}</td><td>${e.fr||'‚Äî'}</td><td>${e.user||''}</td></tr>`;\n"
        "      }).join('');\n"
        "      elResult.innerHTML = `<div class=\"summary\">\n"
        "        <div class=\"summary-title\">üéâ Termin√© ! Score : ${state.score} / ${state.total}</div>\n"
        "        <table class=\"summary-table\"><thead><tr><th>#</th><th>OK</th><th>Portugais</th><th>Phon√©tique</th><th>Fran√ßais</th><th>Votre saisie</th></tr></thead><tbody>${rows}</tbody></table>\n"
        "      </div>`;\n"
        "      elBtnCheck.style.display='none'; elBtnNext.style.display='none';\n"
        "      return;\n"
        "    }\n"
        "    state.idx+=1; render();\n"
        "  }\n"
        "\n"
        "  // Wire UI\n"
        "  elBtnStart.onclick=()=>{\n"
        "    state.started=true; state.score=0; state.idx=0; state.history=[]; elConfig.style.display='none'; elStage.style.display='block';\n"
        "    render();\n"
        "  };\n"
        "  elBtnCheck.onclick=check;\n"
        "  elBtnNext.onclick=next;\n"
        "  elBtnRestart.onclick=()=>{ clearInterval(state.countdownInterval); state.started=false; elStage.style.display='none'; elConfig.style.display='block'; setButtons(); };\n"
        "  setButtons();\n"
        "}\n"
        "function startDictationQuiz(POOL){ DictationApp({ pool: POOL, total: POOL.length }); }\n"
    )
